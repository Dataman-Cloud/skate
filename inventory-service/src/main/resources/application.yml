server:
  port: 8282
spring:
  profiles:
    active: test
  application:
      productIdKey: productId
      productNumKey: productNum
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
logging:
  level:
    demo: info
---
spring:
  profiles: development
  neo4j:
    host: ${SPRING_NEO4J_HOST:192.168.31.72}
    port: ${SPRING_NEO4J_PORT:7474}
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://192.168.31.72:8761/eureka/
---
spring:
  profiles: docker
  application:
    productIdKey: productId
    productNumKey: productNum
  neo4j:
    host: ${SPRING_NEO4J_HOST:neo4j}
    port: ${SPRING_NEO4J_PORT:7474}
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
---
spring:
  profiles: test
  application:
      productIdKey: productId
      productNumKey: productNum
  neo4j:
    host: 192.168.31.72
    port: 7474
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://192.168.31.72:8761/eureka/